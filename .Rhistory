}
library(latex2exp)
devtools::load_all('~/hubGM.codata/')
for (label in c('1e_m6', '1e_m4', '1e_m2', 's02')){
if(label == '1e_m6'){
title <- TeX(r'($\sigma_0 = 10^{-6}$)')
xlab1 <- '\n'
ylab1 <-  ylab2 <- 'Average true positive rate'
xlab2 <- 'False positive rate'
}else if(label == '1e_m4'){
title <- TeX(r'($\sigma_0 = 10^{-4}$)')
xlab1 <- ylab1 <- ylab2 <- '\n'
xlab2 <- 'False positive rate'
}else if(label == '1e_m2'){
title <- TeX(r'($\sigma_0 = 10^{-2}$)')
xlab1 <- ylab1  <- ylab2 <- '\n'
xlab2 <- 'False positive rate'
}else if(label == 's02'){
title <- TeX(r'($\sigma_0 = 0.07$)')
xlab1 <- ylab1 <- ylab2 <- '\n'
xlab2 <- 'False positive rate'
}
load(paste0('~/Desktop/test_em_',label,'.rda'))
bool_up <- upper.tri(net$A)
list_em <- list_t <- list_vbem <- list_emc <- list_tc <- list_vbemc <- list()
pdf(paste0('~/Desktop/test_em_',label,'.pdf'), width = 10, height = 10)
par(mfrow = c(6,6))
for(seed in 1:32){
load(paste0('data_seed',seed,'.rda'))
plot_roc(out_em[[seed]]$P[bool_up], net$A[bool_up], col = 'black', lty = 2)
plot_roc(out_vbem[[seed]]$m_delta[bool_up], net$A[bool_up], add = T, col = 'grey')
list_em[[seed]] <- out_em[[seed]]$P[bool_up]
list_vbem[[seed]] <- out_vbem[[seed]]$m_delta[bool_up]
list_t[[seed]] <- net$A[bool_up]
}
dev.off()
pdf(paste0('~/Desktop/test_emc_',label,'.pdf'), width = 10, height = 10)
par(mfrow = c(6,6))
for(seed in 1:32){
load(paste0('data_seed',seed,'.rda'))
plot_roc(out_em[[seed]]$P2, beta_true!=0,  col = 'black', lty = 2 , fpr_stop = 0.1)
plot_roc(out_vbem[[seed]]$m_gamma, beta_true!=0, add = T,col = 'grey', fpr_stop = 0.1)
list_emc[[seed]] <- out_em[[seed]]$P2
list_vbemc[[seed]] <- out_vbem[[seed]]$m_gamma
list_tc[[seed]] <- beta_true!=0
}
dev.off()
pdf(paste0('~/Desktop/test_em_summary_',label,'.pdf'), width = 4, height = 4.2)
par(mfrow = c(1,1), pty='s')
plot_roc(list_em,  list_t, col = 'black', lty=2, fpr_stop = 0.1, main = title, xlab = xlab1, ylab = ylab1)
plot_roc(list_vbem,  list_t , add = T, col = 'grey', fpr_stop = 0.1)
legend("bottomright",
legend = c("GMSS-VBEM","GMSS-EM"),
lty = c(2, 1),
cex = 0.7,
col = c('black','grey'))
dev.off()
pdf(paste0('~/Desktop/test_emc_summary_',label,'.pdf'), width = 4, height = 4.2)
par(mfrow = c(1,1),pty='s')
plot_roc(list_emc,  list_tc, col = 'black', lty=2 , fpr_stop = 0.1, main = '\n',  xlab = xlab2, ylab = ylab2)
plot_roc(list_vbemc,  list_tc , add = T, col = 'grey', fpr_stop = 0.1)
legend("bottomright",
legend = c("GMSS-VBEM","GMSS-EM"),
lty = c(2, 1),
cex = 0.7,
col = c('black','grey'))
dev.off()
}
library(navigm)
set.seed(123)
set.seed(123)
#
# if(T){
N <- 200
#
# if(T){
N <- 200
P <- 100
Q <- 50
Q <- 50
Q0 <- 3
Q0 <- 3
zeta <-  - 2.5
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
N <- 200
P <- 100
Q <- 50
Q0 <- 3
zeta <-  - 2
# }
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
#
# if(T){
N <- 200
Q <- 50
Q0 <- 3
zeta <-  - 1.8
set.seed(123)
#
# if(T){
N <- 200
P <- 100
Q <- 50
Q0 <- 3
zeta <-  - 1.8
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
set.seed(123)
#
# if(T){
N <- 200
P <- 100
Q <- 50
Q0 <- 3
zeta <-  -2.5
# }
#
# if(F){
# N <- 100
# P <- 20
# Q <- 10
# Q0 <- 1
# zeta <-  - 1.2
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
set.seed(123)
#
# if(T){
N <- 200
P <- 100
Q <- 50
Q0 <- 3
zeta <-  -2
# }
#
# if(F){
# N <- 100
# P <- 20
# Q <- 10
# Q0 <- 1
# zeta <-  - 1.2
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
set.seed(123)
#
# if(T){
N <- 200
P <- 100
Q <- 50
Q0 <- 3
zeta <-  -2.4
# }
#
# if(F){
# N <- 100
# P <- 20
# Q <- 10
# Q0 <- 1
# zeta <-  - 1.2
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
set.seed(123)
#
# if(T){
N <- 200
P <- 100
Q <- 50
Q0 <- 1
zeta <-  -2
# }
#
# if(F){
# N <- 100
# P <- 20
# Q <- 10
# Q0 <- 1
# zeta <-  - 1.2
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
set.seed(123)
#
# if(T){
N <- 200
P <- 100
Q <- 50
Q0 <- 1
zeta <-  -1.5
# }
#
# if(F){
# N <- 100
# P <- 20
# Q <- 10
# Q0 <- 1
# zeta <-  - 1.2
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
set.seed(123)
#
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 1.5
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
set.seed(123)
#
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 1.3
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
set.seed(123)
#
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 1.2
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
net$A
set.seed(123)
#
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 1
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
theta
hist(theta)
#
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 1
#
V <- generate_V(P, Q)
#
beta0 <- 0.7
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
sum(upper.tri(net$A))
sum(net$A[upper.tri(net$A)])
net$A
sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A))
set.seed(123)
#
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 1.5
#
V <- generate_V(P, Q)
#
beta0 <- 0.7
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4)
set.seed(123)
#
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 1.2
#
V <- generate_V(P, Q)
#
beta0 <- 0.7
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4)
