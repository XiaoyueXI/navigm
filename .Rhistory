P <- 100
Q <- 50
Q0 <- 3
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
zeta <-  - 1.5
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4)
library(ggplot2)
library(ggplot2)
rY <- reshape::melt(net$Y)
g1 <- ggplot(rY, aes(X1, X2)) +
geom_tile(aes(fill = value)) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_gradient2(low="navy", mid="white", high="red",
midpoint=0)+
labs(x = '', y = '', fill='') +
theme(legend.position = 'none',
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())+
guides(fill = guide_colourbar(barwidth = 0.5))+
theme_classic()
rV <- reshape::melt(V)
g2 <- ggplot(rV, aes(X2, X1)) +
geom_tile(aes(fill = value)) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_gradient2(low="navy", mid="white", high="red",
midpoint=0)+
labs(x = '', y = '', fill='') +
theme(legend.position = 'none',
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank())+
guides(fill = guide_colourbar(barwidth = 0.5))+
theme_classic()
g1; g2
set.seed(123)
#
if(T){
N <- 200
P <- 100
Q <- 50
Q0 <- 1
zeta <-  - 1.5
}
if(F){
N <- 100
P <- 20
Q <- 10
Q0 <- 1
zeta <-  - 1.2
}
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A))
set.seed(123)
#
if(T){
N <- 200
P <- 100
Q <- 50
Q0 <- 1
zeta <-  - 1
}
if(F){
N <- 100
P <- 20
Q <- 10
Q0 <- 1
zeta <-  - 1.2
}
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
upper.tri(net$A)
sum(net$)
sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A))
set.seed(123)
#
if(T){
N <- 200
P <- 100
Q <- 50
Q0 <- 1
zeta <-  - 0.9
}
if(F){
N <- 100
P <- 20
Q <- 10
Q0 <- 1
zeta <-  - 1.2
}
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A))
set.seed(123)
#
# if(T){
#   N <- 200
#   P <- 100
#   Q <- 50
#   Q0 <- 1
#   zeta <-  - 0.9
# }
#
# if(F){
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 1.2
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4)
set.seed(123)
#
# if(T){
#   N <- 200
#   P <- 100
#   Q <- 50
#   Q0 <- 1
#   zeta <-  - 0.9
# }
#
# if(F){
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 1
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
set.seed(123)
#
# if(T){
#   N <- 200
#   P <- 100
#   Q <- 50
#   Q0 <- 1
#   zeta <-  - 0.9
# }
#
# if(F){
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 0.9
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4)
set.seed(123)
#
# if(T){
#   N <- 200
#   P <- 100
#   Q <- 50
#   Q0 <- 1
#   zeta <-  - 0.9
# }
#
# if(F){
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 0.85
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
set.seed(123)
#
# if(T){
#   N <- 200
#   P <- 100
#   Q <- 50
#   Q0 <- 1
#   zeta <-  - 0.9
# }
#
# if(F){
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 0.89
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
set.seed(123)
#
# if(T){
#   N <- 200
#   P <- 100
#   Q <- 50
#   Q0 <- 1
#   zeta <-  - 0.9
# }
#
# if(F){
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 0.895
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4)
set.seed(123)
#
# if(T){
#   N <- 200
#   P <- 100
#   Q <- 50
#   Q0 <- 1
#   zeta <-  - 0.9
# }
#
# if(F){
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 0.894
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4)
set.seed(123)
#
# if(T){
#   N <- 200
#   P <- 100
#   Q <- 50
#   Q0 <- 1
#   zeta <-  - 0.9
# }
#
# if(F){
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 0.893
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4)
set.seed(123)
#
# if(T){
#   N <- 200
#   P <- 100
#   Q <- 50
#   Q0 <- 1
#   zeta <-  - 0.9
# }
#
# if(F){
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 0.892
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4)
set.seed(123)
#
# if(T){
#   N <- 200
#   P <- 100
#   Q <- 50
#   Q0 <- 1
#   zeta <-  - 0.9
# }
#
# if(F){
N <- 200
P <- 50
Q <- 10
Q0 <- 1
zeta <-  - 0.89
# }
#
V <- generate_V(P, Q)
#
beta0 <- 0.5
sig2_beta0 <- 0.1
beta_true <- rlnorm(Q0, log(beta0), sig2_beta0)
beta_true_gmss <- rep(0, Q)
beta_true_gmss[sample(1:Q, Q0)] <- beta_true
#
theta <- V %*% matrix(beta_true_gmss, ncol = 1)
pe <- matrix(theta, nrow = P, ncol = P)
pe <- pe + t(pe) + zeta
pe <- pnorm(pe)
A <- 0 + (pe >= 0.5)
diag(A) <- 0
#
net <-  generate_data_from_adjancency(N = N, A = A)
round(sum(net$A[upper.tri(net$A)])/sum(upper.tri(net$A)),4) * 100
devtools::build_rmd('vignettes/navigm.Rmd')
P*(P-1)/2
roxygen2::roxygenise('~/navigm/')
